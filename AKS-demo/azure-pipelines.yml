# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'ACR_SP'  # Replace with the new service connection ID or name
  imageRepository: 'aksdemo'
  containerRegistry: 'RandomPredictRegistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'


  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy to AKS
  jobs:
  - deployment: DeployToAKS
    displayName: Deploy to AKS
    pool:
      vmImage: $(vmImageName)
    environment: 'RandomPredictK8'  # This should match the name of the environment in Azure DevOps that represents your AKS cluster
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Kubernetes@1
            displayName: 'Set Kubernetes Image'
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'Abhinav_Service_Connection'
              azureResourceGroup: 'Abhinav'
              kubernetesCluster: 'RandomPredictK8'
              namespace: 'default'
              command: 'set'
              arguments: 'image deployment/myapp-container myapp-container=${{ variables.containerRegistry }}/${{ variables.imageRepository }}:$(tag)'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'

